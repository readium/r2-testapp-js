{
  "name": "r2-testapp-js",
  "version": "1.0.8-rc.0",
  "description": "Readium 2 'testapp' for NodeJS (TypeScript)",
  "keywords": [
    "readium",
    "readium2",
    "testapp",
    "EPUB",
    "TypeScript",
    "JavaScript",
    "ES5",
    "ES6",
    "ECMAScript 2015",
    "ECMAScript 6",
    "ES7",
    "ECMAScript 2016",
    "ECMAScript 7",
    "ES8",
    "ECMAScript 2017",
    "ECMAScript 8"
  ],
  "engines": {
    "node": ">=6",
    "npm": ">=3",
    "yarn": ">=1.0"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/readium/r2-testapp-js.git"
  },
  "author": {
    "name": "Readium Foundation / EDRLab",
    "organization": "Readium Foundation / EDRLab",
    "email": "contact@edrlab.org",
    "url": "http://github.com/readium/"
  },
  "license": "BSD-3-Clause",
  "licenses": [
    {
      "type": "BSD-3-Clause",
      "url": "http://opensource.org/licenses/BSD-3-Clause"
    }
  ],
  "bugs": {
    "url": "https://github.com/readium/r2-testapp-js/issues"
  },
  "homepage": "https://github.com/readium/r2-testapp-js",
  "dependencies": {
    "debounce": "^1.2.0",
    "debug": "^4.1.1",
    "electron-store": "^6.0.0",
    "filehound": "^1.17.4",
    "material-components-web": "^7.0.0",
    "material-design-icons-iconfont": "^5.0.1",
    "mathjax": "^3.0.5",
    "portfinder": "^1.0.27",
    "r2-lcp-js": "^1.0.29",
    "r2-navigator-js": "^1.5.0",
    "r2-opds-js": "^1.0.27",
    "r2-shared-js": "^1.0.39",
    "r2-streamer-js": "^1.0.31",
    "r2-utils-js": "^1.0.23",
    "request": "^2.88.2",
    "request-promise-native": "^1.0.9",
    "riot": "^3.13.2",
    "system-font-families": "^0.5.0",
    "ta-json-x": "^2.5.2",
    "terse": "^0.1.0",
    "throttleit": "^1.0.0",
    "tslib": "^2.0.0",
    "uuid": "^8.2.0"
  },
  "devDependencies": {
    "@octokit/rest": "^18.0.3",
    "@types/debounce": "^3.0.0",
    "@types/debug": "^4.1.5",
    "@types/electron-store": "^3.2.0",
    "@types/express": "^4.17.7",
    "@types/node": "^12.12.53",
    "@types/request": "^2.48.5",
    "@types/request-promise-native": "^1.0.17",
    "@types/uuid": "^8.0.0",
    "asar": "^3.0.3",
    "browserify": "^16.5.1",
    "cpy-cli": "^3.1.1",
    "cross-env": "^7.0.2",
    "cson": "^7.17.0",
    "eclint": "^2.8.1",
    "electron": "^9.1.1",
    "electron-builder": "^22.7.0",
    "exorcist": "^1.0.1",
    "git-rev-sync": "^2.0.0",
    "json": "^10.0.0",
    "mkdirp": "^1.0.4",
    "rimraf": "^3.0.2",
    "riot-typed": "github:danielweck/riot-typed#master",
    "sorcery": "^0.10.0",
    "tslint": "^5.20.1",
    "tslint-language-service": "^0.9.9",
    "typescript": "^3.9.7"
  },
  "main": "dist/bundle-es8-es2017/main.js",
  "types": "dist/es8-es2017/src/electron/main/index.d.js",
  "files": [
    "LICENSE",
    "README.md",
    "CHANGELOG.md",
    "docs/**/*",
    "dist/**/*"
  ],
  "build": {
    "productName": "Readium2_desktop_testapp",
    "appId": "org.readium.r2-testapp-js",
    "dmg": {
      "contents": [
        {
          "x": 410,
          "y": 150,
          "type": "link",
          "path": "/Applications"
        },
        {
          "x": 130,
          "y": 150,
          "type": "file"
        }
      ]
    },
    "files": [
      "**/*.*"
    ],
    "directories": {
      "buildResources": "resources",
      "output": "electron-pack",
      "app": "dist/electron/"
    },
    "win": {
      "target": "nsis"
    },
    "linux": {
      "target": [
        "deb",
        "AppImage"
      ]
    }
  },
  "scripts": {
    "cson2json": "sed -E \"s/#ECMASCRIPT#/es5/g\" package-scripts-bundle.cson > tmp-bundle.cson && sed -E \"s/#ECMASCRIPT#/es6-es2015/g\" package-scripts-bundle.cson >> tmp-bundle.cson && sed -E \"s/#ECMASCRIPT#/es7-es2016/g\" package-scripts-bundle.cson >> tmp-bundle.cson && sed -E \"s/#ECMASCRIPT#/es8-es2017/g\" package-scripts-bundle.cson >> tmp-bundle.cson && sed -E \"s/#ECMASCRIPT#/es5/g\" package-scripts-build.cson > tmp-build.cson && sed -E \"s/#ECMASCRIPT#/es6-es2015/g\" package-scripts-build.cson >> tmp-build.cson && sed -E \"s/#ECMASCRIPT#/es7-es2016/g\" package-scripts-build.cson >> tmp-build.cson && sed -E \"s/#ECMASCRIPT#/es8-es2017/g\" package-scripts-build.cson >> tmp-build.cson && json -I -f package.json -e \"this.scripts=$(cat package-scripts.cson tmp-build.cson tmp-bundle.cson | node node_modules/.bin/cson2json)\" && rimraf tmp-*.cson",
    "postinstallxx": "npm rebuild --runtime=electron --target=8.2.3 --disturl=https://atom.io/download/atom-shell --build-from-source",
    "electron-pack:prepare": "rimraf dist/electron/ && mkdirp dist/electron/ && (ls ./dist/es8-es2017/ || npm run build:es8-es2017) && (ls ./dist/bundle-es8-es2017/ || npm run bundle:es8-es2017_) && cpy \"./**/*\" ../electron/  --cwd=./dist/bundle-es8-es2017/ --parents --no-dir && rimraf dist/electron/node_modules/ && cpy ./package.json dist/electron/ && json -I -f dist/electron/package.json -e \"this.build=undefined\" && json -I -f dist/electron/package.json -e \"this.scripts=undefined\" && json -I -f dist/electron/package.json -e \"this.importSort=undefined\" && json -I -f dist/electron/package.json -e \"this.devDependencies=undefined\" && json -I -f dist/electron/package.json -e \"this.optionalDependencies=undefined\" && json -I -f dist/electron/package.json -e \"this.peerDependencies=undefined\" && json -I -f dist/electron/package.json -e \"this.bundleDependencies=undefined\" && json -I -f dist/electron/package.json -e \"this.dependencies={ conf: \\\"latest\\\", bindings: \\\"latest\\\" }\" && json -I -f dist/electron/package.json -e \"this.types=undefined\" && json -I -f dist/electron/package.json -e \"this.bin=undefined\" && json -I -f dist/electron/package.json -e \"this.main=\\\"main.js\\\"\" && json -I -f dist/electron/package.json -e \"this.files=undefined\"",
    "preelectron-pack": "npm run electron-pack:prepare && rimraf \"./electron-pack/mac/\" && rimraf \"./electron-pack/win-unpacked/\" && rimraf \"./electron-pack/linux-unpacked/\"",
    "electron-pack": "electron-builder --publish never",
    "electron-pack:travis-docker-linux-win": "electron-builder -lw --x64 --publish never",
    "electron-pack:travis-linux": "electron-builder -l --x64 --publish never",
    "electron-pack:travis-mac": "electron-builder -m --x64 --publish never",
    "electron-pack:travis-win": "electron-builder -w --x64 --publish never",
    "preelectron-pack:win": "npm run electron-pack:prepare && rimraf \"./electron-pack/win-unpacked/\"",
    "electron-pack:win": "electron-builder --win --x64",
    "preelectron-pack:linux": "npm run electron-pack:prepare && rimraf \"./electron-pack/linux-unpacked/\"",
    "electron-pack:linux": "electron-builder --linux",
    "preelectron-pack:mac": "npm run electron-pack:prepare && rimraf \"./electron-pack/mac/\"",
    "electron-pack:mac": "electron-builder --mac && asar l electron-pack/mac/*.app/Contents/Resources/app.asar",
    "riot:all": "npm run riot:es5 && npm run riot:es6-es2015 && npm run riot:es7-es2016 && npm run riot:es8-es2017",
    "preelectron-renderer:all": "npm run preelectron-renderer:es5 && npm run preelectron-renderer:es6-es2015 && npm run preelectron-renderer:es7-es2016 && npm run preelectron-renderer:es8-es2017",
    "electron-renderer:all": "npm run riot:all && cpy \"./ReadiumCSS/**/*\" ../../../dist/ --cwd=./node_modules/r2-navigator-js/dist/ --parents --no-dir && cpy \"./mathjax/**/*\" ../dist/ --cwd=./node_modules/ --parents --no-dir",
    "postelectron-renderer:all": "npm run bundle:all",
    "preelectron": "node tools/electronRename.js",
    "electron": "cross-env DEBUG=r2:* NODE_ENV=development electron ./dist/es8-es2017/src/electron/main/index.js",
    "preelectron-bundle": "npm run preelectron",
    "electron-bundle": "cross-env DEBUG=r2:* electron ./dist/bundle-es8-es2017/main.js",
    "_pregitdist": "npm run build:all",
    "gitdist": "cd ../r2-testapp-js-dist/ && git checkout -B develop && (git pull || echo \"pull\") && (git --no-pager status || echo status) && ((rimraf \"*\" && echo rimrafOK) || echo rimrafNOK) && cpy ../r2-testapp-js/package.json . && cpy ../r2-testapp-js/package-lock.json . && cpy ../r2-testapp-js/LICENSE . && cpy ../r2-testapp-js/README.md . && cpy \"./docs/**/*\" ../r2-testapp-js-dist/ --cwd=../r2-testapp-js/ --parents --no-dir && cpy \"./dist/**/*\" ../r2-testapp-js-dist/ --cwd=../r2-testapp-js/ --parents --no-dir && (git add * || echo add) && (git commit -a -m \"add new dist\" || echo commit) && (git push --set-upstream origin develop || echo push) && (git --no-pager status || echo status) && cd ../r2-testapp-js",
    "start": "cross-env DEBUG=r2:* node \"./dist/es6-es2015/src/http/server-cli.js\" ./misc/epubs/",
    "prepare_": "npm run build:all && npm test",
    "prepublish_": "npm run prepare_",
    "typescript:imports": "node tools/typescript_relativize_path_mapping_imports.js",
    "gitrev": "node tools/gitrev.js && cat dist/gitrev.json",
    "afterdist": "npm run typescript:imports && npm run gitrev",
    "prebuild": "npm run lint",
    "build": "npm run transpile:typescript",
    "postbuild": "npm run afterdist && npm run electron-renderer:es8-es2017",
    "prebuild:all": "npm run lint",
    "build:all": "npm run transpile:typescript:all",
    "postbuild:all": "npm run afterdist && npm run electron-renderer:all",
    "clean": "rimraf ./dist && rimraf ./electron-pack && mkdirp ./dist",
    "lint": "npm run lint:all && npm run lint:typescript:full",
    "lint:all": "eclint check \"**/*\" \"!**/*.node\" \"!.git/**/*\" \"!node_modules*/**/*\" \"!dist/**/*\" \"!misc/**/*\" \"!electron-pack/**/*\" \"!resources/**/*\" \"!.vscode/**/*\" \"!.history/**/*\" \"!**/.DS_Store\" \"!**/*.epub\" \"!**/*.cbz\" \"!**/*.jpg\" \"!**/*.jpeg\" \"!**/*.png\" \"!**/*.log\"",
    "lint:typescript": "tslint -c \"./tslint.json\" \"./src/**/*.ts\" \"./test/**/*.ts\"",
    "lint:typescript:full": "tslint --project \"./tsconfig.json\" -c \"./tslint.json\" \"./src/**/*.ts\" \"./test/**/*.ts\"",
    "lintfix": "sed -i \"\" \"s/let normalizedPath = path\\.normalize(documentPath);/let normalizedPath = path.normalize(documentPath).toLowerCase();/g\" ./node_modules/tslint-language-service/out/src/index.js",
    "pretranspile:typescript": "npm run clean",
    "transpile:typescript": "tsc --pretty -p \"./tsconfig.json\"",
    "pretranspile:typescript:all": "npm run clean",
    "transpile:typescript:all": "npm run transpile:typescript:es5 && npm run transpile:typescript:es6-es2015 && npm run transpile:typescript:es7-es2016 && npm run transpile:typescript:es8-es2017",
    "transpile:typescript:es8-es2017+afterdist": "npm run transpile:typescript:es8-es2017 && npm run afterdist && npm run electron-renderer:es8-es2017",
    "transpile:typescript:single": "node tools/typescript_compile_single.js",
    "posttranspile:typescript:single": "npm run afterdist && npm run electron-renderer:es8-es2017",
    "bundle:all": "npm run bundle:es5 && npm run bundle:es6-es2015 && npm run bundle:es7-es2016 && npm run bundle:es8-es2017",
    "bundle:all_": "npm run bundle:es5_ && npm run bundle:es6-es2015_ && npm run bundle:es7-es2016_ && npm run bundle:es8-es2017_",
    "prebuild:es5": "npm run lint && npm run clean",
    "build:es5": "npm run transpile:typescript:es5",
    "postbuild:es5": "npm run afterdist && npm run electron-renderer:es5",
    "transpile:typescript:es5": "tsc --pretty -p \"./tsconfigs/tsconfig-es5-all.json\"",
    "riot:es5": "cpy ./node_modules/riot/riot.js ./dist/es5/src/electron/renderer/ && riot --ext html --type none ./dist/es5/src/electron/renderer/riots/ ./dist/es5/src/electron/renderer/riots/ && rimraf \"./dist/es5/src/electron/renderer/riots/**/*.html\"",
    "material:es5": "cpy ./node_modules/material-design-icons-iconfont/dist/fonts/MaterialIcons-Regular.woff2 ./dist/es5/src/electron/renderer/ && cpy ./node_modules/material-components-web/dist/material-components-web.css ./dist/es5/src/electron/renderer/ && cpy ./node_modules/material-components-web/dist/material-components-web.js ./dist/es5/src/electron/renderer/",
    "preelectron-renderer:es5": "npm run material:es5 && cpy ./node_modules/r2-navigator-js/dist/ReadiumCSS/fonts/AccessibleDfA.otf ./dist/es5/src/electron/renderer/ && cpy ./node_modules/r2-navigator-js/dist/ReadiumCSS/fonts/iAWriterDuospace-Regular.ttf ./dist/es5/src/electron/renderer/ && cpy \"./src/electron/renderer/**/*.html\" ./dist/es5/ --cwd=./ --parents && cpy \"./src/electron/renderer/**/*.css\" ./dist/es5/ --cwd=./ --parents",
    "electron-renderer:es5": "npm run riot:es5 && cpy \"./ReadiumCSS/**/*\" ../../../dist/ --cwd=./node_modules/r2-navigator-js/dist/ --parents --no-dir && cpy \"./mathjax/**/*\" ../dist/ --cwd=./node_modules/ --parents --no-dir",
    "postelectron-renderer:es5": "npm run bundle:es5",
    "prebuild:es6-es2015": "npm run lint && npm run clean",
    "build:es6-es2015": "npm run transpile:typescript:es6-es2015",
    "postbuild:es6-es2015": "npm run afterdist && npm run electron-renderer:es6-es2015",
    "transpile:typescript:es6-es2015": "tsc --pretty -p \"./tsconfigs/tsconfig-es6-es2015-all.json\"",
    "riot:es6-es2015": "cpy ./node_modules/riot/riot.js ./dist/es6-es2015/src/electron/renderer/ && riot --ext html --type none ./dist/es6-es2015/src/electron/renderer/riots/ ./dist/es6-es2015/src/electron/renderer/riots/ && rimraf \"./dist/es6-es2015/src/electron/renderer/riots/**/*.html\"",
    "material:es6-es2015": "cpy ./node_modules/material-design-icons-iconfont/dist/fonts/MaterialIcons-Regular.woff2 ./dist/es6-es2015/src/electron/renderer/ && cpy ./node_modules/material-components-web/dist/material-components-web.css ./dist/es6-es2015/src/electron/renderer/ && cpy ./node_modules/material-components-web/dist/material-components-web.js ./dist/es6-es2015/src/electron/renderer/",
    "preelectron-renderer:es6-es2015": "npm run material:es6-es2015 && cpy ./node_modules/r2-navigator-js/dist/ReadiumCSS/fonts/AccessibleDfA.otf ./dist/es6-es2015/src/electron/renderer/ && cpy ./node_modules/r2-navigator-js/dist/ReadiumCSS/fonts/iAWriterDuospace-Regular.ttf ./dist/es6-es2015/src/electron/renderer/ && cpy \"./src/electron/renderer/**/*.html\" ./dist/es6-es2015/ --cwd=./ --parents && cpy \"./src/electron/renderer/**/*.css\" ./dist/es6-es2015/ --cwd=./ --parents",
    "electron-renderer:es6-es2015": "npm run riot:es6-es2015 && cpy \"./ReadiumCSS/**/*\" ../../../dist/ --cwd=./node_modules/r2-navigator-js/dist/ --parents --no-dir && cpy \"./mathjax/**/*\" ../dist/ --cwd=./node_modules/ --parents --no-dir",
    "postelectron-renderer:es6-es2015": "npm run bundle:es6-es2015",
    "prebuild:es7-es2016": "npm run lint && npm run clean",
    "build:es7-es2016": "npm run transpile:typescript:es7-es2016",
    "postbuild:es7-es2016": "npm run afterdist && npm run electron-renderer:es7-es2016",
    "transpile:typescript:es7-es2016": "tsc --pretty -p \"./tsconfigs/tsconfig-es7-es2016-all.json\"",
    "riot:es7-es2016": "cpy ./node_modules/riot/riot.js ./dist/es7-es2016/src/electron/renderer/ && riot --ext html --type none ./dist/es7-es2016/src/electron/renderer/riots/ ./dist/es7-es2016/src/electron/renderer/riots/ && rimraf \"./dist/es7-es2016/src/electron/renderer/riots/**/*.html\"",
    "material:es7-es2016": "cpy ./node_modules/material-design-icons-iconfont/dist/fonts/MaterialIcons-Regular.woff2 ./dist/es7-es2016/src/electron/renderer/ && cpy ./node_modules/material-components-web/dist/material-components-web.css ./dist/es7-es2016/src/electron/renderer/ && cpy ./node_modules/material-components-web/dist/material-components-web.js ./dist/es7-es2016/src/electron/renderer/",
    "preelectron-renderer:es7-es2016": "npm run material:es7-es2016 && cpy ./node_modules/r2-navigator-js/dist/ReadiumCSS/fonts/AccessibleDfA.otf ./dist/es7-es2016/src/electron/renderer/ && cpy ./node_modules/r2-navigator-js/dist/ReadiumCSS/fonts/iAWriterDuospace-Regular.ttf ./dist/es7-es2016/src/electron/renderer/ && cpy \"./src/electron/renderer/**/*.html\" ./dist/es7-es2016/ --cwd=./ --parents && cpy \"./src/electron/renderer/**/*.css\" ./dist/es7-es2016/ --cwd=./ --parents",
    "electron-renderer:es7-es2016": "npm run riot:es7-es2016 && cpy \"./ReadiumCSS/**/*\" ../../../dist/ --cwd=./node_modules/r2-navigator-js/dist/ --parents --no-dir && cpy \"./mathjax/**/*\" ../dist/ --cwd=./node_modules/ --parents --no-dir",
    "postelectron-renderer:es7-es2016": "npm run bundle:es7-es2016",
    "prebuild:es8-es2017": "npm run lint && npm run clean",
    "build:es8-es2017": "npm run transpile:typescript:es8-es2017",
    "postbuild:es8-es2017": "npm run afterdist && npm run electron-renderer:es8-es2017",
    "transpile:typescript:es8-es2017": "tsc --pretty -p \"./tsconfigs/tsconfig-es8-es2017-all.json\"",
    "riot:es8-es2017": "cpy ./node_modules/riot/riot.js ./dist/es8-es2017/src/electron/renderer/ && riot --ext html --type none ./dist/es8-es2017/src/electron/renderer/riots/ ./dist/es8-es2017/src/electron/renderer/riots/ && rimraf \"./dist/es8-es2017/src/electron/renderer/riots/**/*.html\"",
    "material:es8-es2017": "cpy ./node_modules/material-design-icons-iconfont/dist/fonts/MaterialIcons-Regular.woff2 ./dist/es8-es2017/src/electron/renderer/ && cpy ./node_modules/material-components-web/dist/material-components-web.css ./dist/es8-es2017/src/electron/renderer/ && cpy ./node_modules/material-components-web/dist/material-components-web.js ./dist/es8-es2017/src/electron/renderer/",
    "preelectron-renderer:es8-es2017": "npm run material:es8-es2017 && cpy ./node_modules/r2-navigator-js/dist/ReadiumCSS/fonts/AccessibleDfA.otf ./dist/es8-es2017/src/electron/renderer/ && cpy ./node_modules/r2-navigator-js/dist/ReadiumCSS/fonts/iAWriterDuospace-Regular.ttf ./dist/es8-es2017/src/electron/renderer/ && cpy \"./src/electron/renderer/**/*.html\" ./dist/es8-es2017/ --cwd=./ --parents && cpy \"./src/electron/renderer/**/*.css\" ./dist/es8-es2017/ --cwd=./ --parents",
    "electron-renderer:es8-es2017": "npm run riot:es8-es2017 && cpy \"./ReadiumCSS/**/*\" ../../../dist/ --cwd=./node_modules/r2-navigator-js/dist/ --parents --no-dir && cpy \"./mathjax/**/*\" ../dist/ --cwd=./node_modules/ --parents --no-dir",
    "postelectron-renderer:es8-es2017": "npm run bundle:es8-es2017",
    "bundle-browserify-electron-main:es5": "browserify ./dist/es5/src/electron/main/index.js --no-builtins --no-commondir --ignore-missing --xxinsert-globals --insert-global-vars \"xx__filename,xx__dirname\" --no-browser-field --xxfull-paths --xxlist --xxdeps --debug --xxexternal \"node_modules/electron/**/*.js\" --exclude electron --exclude conf --exclude bindings --outfile ./dist/bundle-es5/electron-main.inlinesourcemap.js",
    "bundle-exorcist-electron-main:es5": "cat ./dist/bundle-es5/electron-main.inlinesourcemap.js | exorcist --root ../../ ./dist/bundle-es5/electron-main_.js.map > ./dist/bundle-es5/electron-main_.js && json -I -f ./dist/bundle-es5/electron-main_.js.map -e \"this.sourcesContent=false\" && rimraf ./dist/bundle-es5/electron-main.inlinesourcemap.js",
    "bundle-sorcery-electron-main:es5": "sorcery --input ./dist/bundle-es5/electron-main_.js --output ./dist/bundle-es5/electron-main.js && rimraf ./dist/bundle-es5/electron-main_.js && rimraf ./dist/bundle-es5/electron-main_.js.map",
    "bundle-uglify-electron-main:es5": "echo \"uglify skip.\"",
    "bundle-uglify-electron-main:es5_": "cpy ./dist/bundle-es5/electron-main.js.map ./dist/bundle-es5/ --rename=electron-main-.js.map && json -I -f ./dist/bundle-es5/electron-main-.js.map -e \"this.sourcesContent=false\" && terse ./dist/bundle-es5/electron-main.js --output ./dist/bundle-es5/electron-main.min.js --xxcompress --xxmangle --keep-classnames --keep-fnames --beautify \"beautify=false,ecma=6,indent_level=0\" --source-map \"root='',url='electron-main.min.js.map',content='./dist/bundle-es5/electron-main-.js.map'\" && rimraf ./dist/bundle-es5/electron-main-.js.map",
    "bundle-browserify-electron-renderer:es5": "browserify ./dist/es5/src/electron/renderer/index.js --no-builtins --no-commondir --ignore-missing --xxinsert-globals --insert-global-vars \"xx__filename,xx__dirname\" --no-browser-field --xxfull-paths --xxlist --xxdeps --debug --xxexternal \"node_modules/electron/**/*.js\" --exclude electron --exclude conf --exclude bindings --outfile ./dist/bundle-es5/electron-renderer.inlinesourcemap.js",
    "bundle-exorcist-electron-renderer:es5": "cat ./dist/bundle-es5/electron-renderer.inlinesourcemap.js | exorcist --root ../../ ./dist/bundle-es5/electron-renderer_.js.map > ./dist/bundle-es5/electron-renderer_.js && json -I -f ./dist/bundle-es5/electron-renderer_.js.map -e \"this.sourcesContent=false\" && rimraf ./dist/bundle-es5/electron-renderer.inlinesourcemap.js",
    "bundle-sorcery-electron-renderer:es5": "sorcery --input ./dist/bundle-es5/electron-renderer_.js --output ./dist/bundle-es5/electron-renderer.js && rimraf ./dist/bundle-es5/electron-renderer_.js && rimraf ./dist/bundle-es5/electron-renderer_.js.map",
    "bundle-uglify-electron-renderer:es5": "echo \"uglify skip.\"",
    "bundle-uglify-electron-renderer:es5_": "cpy ./dist/bundle-es5/electron-renderer.js.map ./dist/bundle-es5/ --rename=electron-renderer-.js.map && json -I -f ./dist/bundle-es5/electron-renderer-.js.map -e \"this.sourcesContent=false\" && terse ./dist/bundle-es5/electron-renderer.js --output ./dist/bundle-es5/electron-renderer.min.js --xxcompress --xxmangle --keep-classnames --keep-fnames --beautify \"beautify=false,ecma=6,indent_level=0\" --source-map \"root='',url='electron-renderer.min.js.map',content='./dist/bundle-es5/electron-renderer-.js.map'\" && rimraf ./dist/bundle-es5/electron-renderer-.js.map",
    "bundle-browserify-electron-webview-preload:es5": "browserify ./node_modules/r2-navigator-js/dist/es5/src/electron/renderer/webview/preload.js --no-builtins --no-commondir --ignore-missing --xxinsert-globals --insert-global-vars \"xx__filename,xx__dirname\" --no-browser-field --xxfull-paths --xxlist --xxdeps --debug --xxexternal \"node_modules/electron/**/*.js\" --exclude electron --outfile ./dist/bundle-es5/electron-webview-preload.inlinesourcemap.js",
    "bundle-exorcist-electron-webview-preload:es5": "cat ./dist/bundle-es5/electron-webview-preload.inlinesourcemap.js | exorcist --root ../../ ./dist/bundle-es5/electron-webview-preload_.js.map > ./dist/bundle-es5/electron-webview-preload_.js && json -I -f ./dist/bundle-es5/electron-webview-preload_.js.map -e \"this.sourcesContent=false\" && rimraf ./dist/bundle-es5/electron-webview-preload.inlinesourcemap.js",
    "bundle-sorcery-electron-webview-preload:es5": "sorcery --input ./dist/bundle-es5/electron-webview-preload_.js --output ./dist/bundle-es5/electron-webview-preload.js && rimraf ./dist/bundle-es5/electron-webview-preload_.js && rimraf ./dist/bundle-es5/electron-webview-preload_.js.map",
    "bundle-uglify-electron-webview-preload:es5": "echo \"uglify skip.\"",
    "bundle-uglify-electron-webview-preload:es5_": "cpy ./dist/bundle-es5/electron-webview-preload.js.map ./dist/bundle-es5/ --rename=electron-webview-preload-.js.map && json -I -f ./dist/bundle-es5/electron-webview-preload-.js.map -e \"this.sourcesContent=false\" && terse ./dist/bundle-es5/electron-webview-preload.js --output ./dist/bundle-es5/electron-webview-preload.min.js --xxcompress --xxmangle --keep-classnames --keep-fnames --beautify \"beautify=false,ecma=6,indent_level=0\" --source-map \"root='',url='electron-webview-preload.min.js.map',content='./dist/bundle-es5/electron-webview-preload-.js.map'\" && rimraf ./dist/bundle-es5/electron-webview-preload-.js.map",
    "bundle:es5": "echo \"bundle skip.\"",
    "bundle-npm-externals:es5_": "cd ./dist/bundle-es5/ && rimraf package.json && rimraf package-lock.json && rimraf node_modules && npm init -f -y && npm install conf@latest --save && npm install bindings@latest --save && rimraf package.json && rimraf package-lock.json && cd ..",
    "prebundle:es5_": "curl https://raw.githubusercontent.com/rbuckton/reflect-metadata/master/Reflect.ts > Reflect.ts && ((ls ./node_modules/reflect-metadata/ && cpy ./Reflect.ts ./node_modules/reflect-metadata/) || echo \"OK\") && ((ls ./node_modules/ta-json-x/node_modules/reflect-metadata/ && cpy ./Reflect.ts ./node_modules/ta-json-x/node_modules/reflect-metadata/) || echo \"OK\") && ((ls ./node_modules/r2-navigator-js/node_modules/ta-json-x/node_modules/reflect-metadata/ && cpy ./Reflect.ts ./node_modules/r2-navigator-js/node_modules/ta-json-x/node_modules/reflect-metadata/) || echo \"OK\") && ((ls ./node_modules/r2-streamer-js/node_modules/ta-json-x/node_modules/reflect-metadata/ && cpy ./Reflect.ts ./node_modules/r2-streamer-js/node_modules/ta-json-x/node_modules/reflect-metadata/) || echo \"OK\") && rimraf Reflect.ts && ((ls ./node_modules/structured-source/ && sed \"s/sourceMappingURL=.*/VOIDsourceMappingURLVOID=/g\" \"./node_modules/structured-source/lib/index.js\" > \"./node_modules/structured-source/lib/index.js.removedsrcmap\" && sed \"s/sourceMappingURL=.*/VOIDsourceMappingURLVOID=/g\" \"./node_modules/structured-source/lib/structured-source.js\" > \"./node_modules/structured-source/lib/structured-source.js.removedsrcmap\" && sed \"s/sourceMappingURL=.*/VOIDsourceMappingURLVOID=/g\" \"./node_modules/boundary/lib/index.js\" > \"./node_modules/boundary/lib/index.js.removedsrcmap\" && mv \"./node_modules/structured-source/lib/index.js.removedsrcmap\" \"./node_modules/structured-source/lib/index.js\" && mv \"./node_modules/structured-source/lib/structured-source.js.removedsrcmap\" \"./node_modules/structured-source/lib/structured-source.js\" && mv \"./node_modules/boundary/lib/index.js.removedsrcmap\" \"./node_modules/boundary/lib/index.js\") || echo \"OK\")",
    "bundle:es5_": "mkdirp ./dist/bundle-es5 && npm run bundle-npm-externals:es5_ && (cpy ./LCP/lcp.node ./dist/bundle-es5/ || echo \"!LCP.node\") && cpy ./dist/es5/src/electron/renderer/riot.js ./dist/bundle-es5/ && cpy ./riots/linklist/index.js ../../../../bundle-es5/ --cwd=./dist/es5/src/electron/renderer/ --parents && cpy ./riots/linklistgroup/index.js ../../../../bundle-es5/ --cwd=./dist/es5/src/electron/renderer/ --parents && cpy ./riots/linktree/index.js ../../../../bundle-es5/ --cwd=./dist/es5/src/electron/renderer/ --parents && cpy ./riots/menuselect/index.js ../../../../bundle-es5/ --cwd=./dist/es5/src/electron/renderer/ --parents && cpy ./dist/es5/src/electron/renderer/MaterialIcons-Regular.woff2 ./dist/bundle-es5/ && cpy ./dist/es5/src/electron/renderer/material-components-web.css ./dist/bundle-es5/ && cpy ./dist/es5/src/electron/renderer/material-components-web.js ./dist/bundle-es5/ && cpy ./dist/es5/src/electron/renderer/AccessibleDfA.otf ./dist/bundle-es5/ && cpy ./dist/es5/src/electron/renderer/iAWriterDuospace-Regular.ttf ./dist/bundle-es5/ && cpy ./dist/es5/src/electron/renderer/index.html ./dist/bundle-es5/ && cpy \"./**/*.css\" ../../../../bundle-es5/ --cwd=./dist/es5/src/electron/renderer/ --parents && printf \"require('./electron-renderer.js');\" > ./dist/bundle-es5/index.js && printf \"require('./electron-main.js');\" > ./dist/bundle-es5/main.js && printf \"require('./electron-webview-preload.js');\" > ./dist/bundle-es5/preload.js && cpy \"./ReadiumCSS/**/*\" ./bundle-es5/ --cwd=./dist/ --parents --no-dir && cpy \"./mathjax/**/*\" ./bundle-es5/ --cwd=./dist/ --parents --no-dir && npm run bundle-electron-main:es5 && npm run bundle-electron-renderer:es5 && npm run bundle-electron-webview-preload:es5 && rimraf \"./dist/bundle-es5/*.js.map\"",
    "bundle-electron-main:es5": "npm run bundle-browserify-electron-main:es5 && npm run bundle-exorcist-electron-main:es5 && npm run bundle-sorcery-electron-main:es5 && npm run bundle-uglify-electron-main:es5",
    "bundle-electron-renderer:es5": "npm run bundle-browserify-electron-renderer:es5 && npm run bundle-exorcist-electron-renderer:es5 && npm run bundle-sorcery-electron-renderer:es5 && npm run bundle-uglify-electron-renderer:es5",
    "bundle-electron-webview-preload:es5": "npm run bundle-browserify-electron-webview-preload:es5 && npm run bundle-exorcist-electron-webview-preload:es5 && npm run bundle-sorcery-electron-webview-preload:es5 && npm run bundle-uglify-electron-webview-preload:es5",
    "bundle-browserify-electron-main:es6-es2015": "browserify ./dist/es6-es2015/src/electron/main/index.js --no-builtins --no-commondir --ignore-missing --xxinsert-globals --insert-global-vars \"xx__filename,xx__dirname\" --no-browser-field --xxfull-paths --xxlist --xxdeps --debug --xxexternal \"node_modules/electron/**/*.js\" --exclude electron --exclude conf --exclude bindings --outfile ./dist/bundle-es6-es2015/electron-main.inlinesourcemap.js",
    "bundle-exorcist-electron-main:es6-es2015": "cat ./dist/bundle-es6-es2015/electron-main.inlinesourcemap.js | exorcist --root ../../ ./dist/bundle-es6-es2015/electron-main_.js.map > ./dist/bundle-es6-es2015/electron-main_.js && json -I -f ./dist/bundle-es6-es2015/electron-main_.js.map -e \"this.sourcesContent=false\" && rimraf ./dist/bundle-es6-es2015/electron-main.inlinesourcemap.js",
    "bundle-sorcery-electron-main:es6-es2015": "sorcery --input ./dist/bundle-es6-es2015/electron-main_.js --output ./dist/bundle-es6-es2015/electron-main.js && rimraf ./dist/bundle-es6-es2015/electron-main_.js && rimraf ./dist/bundle-es6-es2015/electron-main_.js.map",
    "bundle-uglify-electron-main:es6-es2015": "echo \"uglify skip.\"",
    "bundle-uglify-electron-main:es6-es2015_": "cpy ./dist/bundle-es6-es2015/electron-main.js.map ./dist/bundle-es6-es2015/ --rename=electron-main-.js.map && json -I -f ./dist/bundle-es6-es2015/electron-main-.js.map -e \"this.sourcesContent=false\" && terse ./dist/bundle-es6-es2015/electron-main.js --output ./dist/bundle-es6-es2015/electron-main.min.js --xxcompress --xxmangle --keep-classnames --keep-fnames --beautify \"beautify=false,ecma=6,indent_level=0\" --source-map \"root='',url='electron-main.min.js.map',content='./dist/bundle-es6-es2015/electron-main-.js.map'\" && rimraf ./dist/bundle-es6-es2015/electron-main-.js.map",
    "bundle-browserify-electron-renderer:es6-es2015": "browserify ./dist/es6-es2015/src/electron/renderer/index.js --no-builtins --no-commondir --ignore-missing --xxinsert-globals --insert-global-vars \"xx__filename,xx__dirname\" --no-browser-field --xxfull-paths --xxlist --xxdeps --debug --xxexternal \"node_modules/electron/**/*.js\" --exclude electron --exclude conf --exclude bindings --outfile ./dist/bundle-es6-es2015/electron-renderer.inlinesourcemap.js",
    "bundle-exorcist-electron-renderer:es6-es2015": "cat ./dist/bundle-es6-es2015/electron-renderer.inlinesourcemap.js | exorcist --root ../../ ./dist/bundle-es6-es2015/electron-renderer_.js.map > ./dist/bundle-es6-es2015/electron-renderer_.js && json -I -f ./dist/bundle-es6-es2015/electron-renderer_.js.map -e \"this.sourcesContent=false\" && rimraf ./dist/bundle-es6-es2015/electron-renderer.inlinesourcemap.js",
    "bundle-sorcery-electron-renderer:es6-es2015": "sorcery --input ./dist/bundle-es6-es2015/electron-renderer_.js --output ./dist/bundle-es6-es2015/electron-renderer.js && rimraf ./dist/bundle-es6-es2015/electron-renderer_.js && rimraf ./dist/bundle-es6-es2015/electron-renderer_.js.map",
    "bundle-uglify-electron-renderer:es6-es2015": "echo \"uglify skip.\"",
    "bundle-uglify-electron-renderer:es6-es2015_": "cpy ./dist/bundle-es6-es2015/electron-renderer.js.map ./dist/bundle-es6-es2015/ --rename=electron-renderer-.js.map && json -I -f ./dist/bundle-es6-es2015/electron-renderer-.js.map -e \"this.sourcesContent=false\" && terse ./dist/bundle-es6-es2015/electron-renderer.js --output ./dist/bundle-es6-es2015/electron-renderer.min.js --xxcompress --xxmangle --keep-classnames --keep-fnames --beautify \"beautify=false,ecma=6,indent_level=0\" --source-map \"root='',url='electron-renderer.min.js.map',content='./dist/bundle-es6-es2015/electron-renderer-.js.map'\" && rimraf ./dist/bundle-es6-es2015/electron-renderer-.js.map",
    "bundle-browserify-electron-webview-preload:es6-es2015": "browserify ./node_modules/r2-navigator-js/dist/es6-es2015/src/electron/renderer/webview/preload.js --no-builtins --no-commondir --ignore-missing --xxinsert-globals --insert-global-vars \"xx__filename,xx__dirname\" --no-browser-field --xxfull-paths --xxlist --xxdeps --debug --xxexternal \"node_modules/electron/**/*.js\" --exclude electron --outfile ./dist/bundle-es6-es2015/electron-webview-preload.inlinesourcemap.js",
    "bundle-exorcist-electron-webview-preload:es6-es2015": "cat ./dist/bundle-es6-es2015/electron-webview-preload.inlinesourcemap.js | exorcist --root ../../ ./dist/bundle-es6-es2015/electron-webview-preload_.js.map > ./dist/bundle-es6-es2015/electron-webview-preload_.js && json -I -f ./dist/bundle-es6-es2015/electron-webview-preload_.js.map -e \"this.sourcesContent=false\" && rimraf ./dist/bundle-es6-es2015/electron-webview-preload.inlinesourcemap.js",
    "bundle-sorcery-electron-webview-preload:es6-es2015": "sorcery --input ./dist/bundle-es6-es2015/electron-webview-preload_.js --output ./dist/bundle-es6-es2015/electron-webview-preload.js && rimraf ./dist/bundle-es6-es2015/electron-webview-preload_.js && rimraf ./dist/bundle-es6-es2015/electron-webview-preload_.js.map",
    "bundle-uglify-electron-webview-preload:es6-es2015": "echo \"uglify skip.\"",
    "bundle-uglify-electron-webview-preload:es6-es2015_": "cpy ./dist/bundle-es6-es2015/electron-webview-preload.js.map ./dist/bundle-es6-es2015/ --rename=electron-webview-preload-.js.map && json -I -f ./dist/bundle-es6-es2015/electron-webview-preload-.js.map -e \"this.sourcesContent=false\" && terse ./dist/bundle-es6-es2015/electron-webview-preload.js --output ./dist/bundle-es6-es2015/electron-webview-preload.min.js --xxcompress --xxmangle --keep-classnames --keep-fnames --beautify \"beautify=false,ecma=6,indent_level=0\" --source-map \"root='',url='electron-webview-preload.min.js.map',content='./dist/bundle-es6-es2015/electron-webview-preload-.js.map'\" && rimraf ./dist/bundle-es6-es2015/electron-webview-preload-.js.map",
    "bundle:es6-es2015": "echo \"bundle skip.\"",
    "bundle-npm-externals:es6-es2015_": "cd ./dist/bundle-es6-es2015/ && rimraf package.json && rimraf package-lock.json && rimraf node_modules && npm init -f -y && npm install conf@latest --save && npm install bindings@latest --save && rimraf package.json && rimraf package-lock.json && cd ..",
    "prebundle:es6-es2015_": "curl https://raw.githubusercontent.com/rbuckton/reflect-metadata/master/Reflect.ts > Reflect.ts && ((ls ./node_modules/reflect-metadata/ && cpy ./Reflect.ts ./node_modules/reflect-metadata/) || echo \"OK\") && ((ls ./node_modules/ta-json-x/node_modules/reflect-metadata/ && cpy ./Reflect.ts ./node_modules/ta-json-x/node_modules/reflect-metadata/) || echo \"OK\") && ((ls ./node_modules/r2-navigator-js/node_modules/ta-json-x/node_modules/reflect-metadata/ && cpy ./Reflect.ts ./node_modules/r2-navigator-js/node_modules/ta-json-x/node_modules/reflect-metadata/) || echo \"OK\") && ((ls ./node_modules/r2-streamer-js/node_modules/ta-json-x/node_modules/reflect-metadata/ && cpy ./Reflect.ts ./node_modules/r2-streamer-js/node_modules/ta-json-x/node_modules/reflect-metadata/) || echo \"OK\") && rimraf Reflect.ts && ((ls ./node_modules/structured-source/ && sed \"s/sourceMappingURL=.*/VOIDsourceMappingURLVOID=/g\" \"./node_modules/structured-source/lib/index.js\" > \"./node_modules/structured-source/lib/index.js.removedsrcmap\" && sed \"s/sourceMappingURL=.*/VOIDsourceMappingURLVOID=/g\" \"./node_modules/structured-source/lib/structured-source.js\" > \"./node_modules/structured-source/lib/structured-source.js.removedsrcmap\" && sed \"s/sourceMappingURL=.*/VOIDsourceMappingURLVOID=/g\" \"./node_modules/boundary/lib/index.js\" > \"./node_modules/boundary/lib/index.js.removedsrcmap\" && mv \"./node_modules/structured-source/lib/index.js.removedsrcmap\" \"./node_modules/structured-source/lib/index.js\" && mv \"./node_modules/structured-source/lib/structured-source.js.removedsrcmap\" \"./node_modules/structured-source/lib/structured-source.js\" && mv \"./node_modules/boundary/lib/index.js.removedsrcmap\" \"./node_modules/boundary/lib/index.js\") || echo \"OK\")",
    "bundle:es6-es2015_": "mkdirp ./dist/bundle-es6-es2015 && npm run bundle-npm-externals:es6-es2015_ && (cpy ./LCP/lcp.node ./dist/bundle-es6-es2015/ || echo \"!LCP.node\") && cpy ./dist/es6-es2015/src/electron/renderer/riot.js ./dist/bundle-es6-es2015/ && cpy ./riots/linklist/index.js ../../../../bundle-es6-es2015/ --cwd=./dist/es6-es2015/src/electron/renderer/ --parents && cpy ./riots/linklistgroup/index.js ../../../../bundle-es6-es2015/ --cwd=./dist/es6-es2015/src/electron/renderer/ --parents && cpy ./riots/linktree/index.js ../../../../bundle-es6-es2015/ --cwd=./dist/es6-es2015/src/electron/renderer/ --parents && cpy ./riots/menuselect/index.js ../../../../bundle-es6-es2015/ --cwd=./dist/es6-es2015/src/electron/renderer/ --parents && cpy ./dist/es6-es2015/src/electron/renderer/MaterialIcons-Regular.woff2 ./dist/bundle-es6-es2015/ && cpy ./dist/es6-es2015/src/electron/renderer/material-components-web.css ./dist/bundle-es6-es2015/ && cpy ./dist/es6-es2015/src/electron/renderer/material-components-web.js ./dist/bundle-es6-es2015/ && cpy ./dist/es6-es2015/src/electron/renderer/AccessibleDfA.otf ./dist/bundle-es6-es2015/ && cpy ./dist/es6-es2015/src/electron/renderer/iAWriterDuospace-Regular.ttf ./dist/bundle-es6-es2015/ && cpy ./dist/es6-es2015/src/electron/renderer/index.html ./dist/bundle-es6-es2015/ && cpy \"./**/*.css\" ../../../../bundle-es6-es2015/ --cwd=./dist/es6-es2015/src/electron/renderer/ --parents && printf \"require('./electron-renderer.js');\" > ./dist/bundle-es6-es2015/index.js && printf \"require('./electron-main.js');\" > ./dist/bundle-es6-es2015/main.js && printf \"require('./electron-webview-preload.js');\" > ./dist/bundle-es6-es2015/preload.js && cpy \"./ReadiumCSS/**/*\" ./bundle-es6-es2015/ --cwd=./dist/ --parents --no-dir && cpy \"./mathjax/**/*\" ./bundle-es6-es2015/ --cwd=./dist/ --parents --no-dir && npm run bundle-electron-main:es6-es2015 && npm run bundle-electron-renderer:es6-es2015 && npm run bundle-electron-webview-preload:es6-es2015 && rimraf \"./dist/bundle-es6-es2015/*.js.map\"",
    "bundle-electron-main:es6-es2015": "npm run bundle-browserify-electron-main:es6-es2015 && npm run bundle-exorcist-electron-main:es6-es2015 && npm run bundle-sorcery-electron-main:es6-es2015 && npm run bundle-uglify-electron-main:es6-es2015",
    "bundle-electron-renderer:es6-es2015": "npm run bundle-browserify-electron-renderer:es6-es2015 && npm run bundle-exorcist-electron-renderer:es6-es2015 && npm run bundle-sorcery-electron-renderer:es6-es2015 && npm run bundle-uglify-electron-renderer:es6-es2015",
    "bundle-electron-webview-preload:es6-es2015": "npm run bundle-browserify-electron-webview-preload:es6-es2015 && npm run bundle-exorcist-electron-webview-preload:es6-es2015 && npm run bundle-sorcery-electron-webview-preload:es6-es2015 && npm run bundle-uglify-electron-webview-preload:es6-es2015",
    "bundle-browserify-electron-main:es7-es2016": "browserify ./dist/es7-es2016/src/electron/main/index.js --no-builtins --no-commondir --ignore-missing --xxinsert-globals --insert-global-vars \"xx__filename,xx__dirname\" --no-browser-field --xxfull-paths --xxlist --xxdeps --debug --xxexternal \"node_modules/electron/**/*.js\" --exclude electron --exclude conf --exclude bindings --outfile ./dist/bundle-es7-es2016/electron-main.inlinesourcemap.js",
    "bundle-exorcist-electron-main:es7-es2016": "cat ./dist/bundle-es7-es2016/electron-main.inlinesourcemap.js | exorcist --root ../../ ./dist/bundle-es7-es2016/electron-main_.js.map > ./dist/bundle-es7-es2016/electron-main_.js && json -I -f ./dist/bundle-es7-es2016/electron-main_.js.map -e \"this.sourcesContent=false\" && rimraf ./dist/bundle-es7-es2016/electron-main.inlinesourcemap.js",
    "bundle-sorcery-electron-main:es7-es2016": "sorcery --input ./dist/bundle-es7-es2016/electron-main_.js --output ./dist/bundle-es7-es2016/electron-main.js && rimraf ./dist/bundle-es7-es2016/electron-main_.js && rimraf ./dist/bundle-es7-es2016/electron-main_.js.map",
    "bundle-uglify-electron-main:es7-es2016": "echo \"uglify skip.\"",
    "bundle-uglify-electron-main:es7-es2016_": "cpy ./dist/bundle-es7-es2016/electron-main.js.map ./dist/bundle-es7-es2016/ --rename=electron-main-.js.map && json -I -f ./dist/bundle-es7-es2016/electron-main-.js.map -e \"this.sourcesContent=false\" && terse ./dist/bundle-es7-es2016/electron-main.js --output ./dist/bundle-es7-es2016/electron-main.min.js --xxcompress --xxmangle --keep-classnames --keep-fnames --beautify \"beautify=false,ecma=6,indent_level=0\" --source-map \"root='',url='electron-main.min.js.map',content='./dist/bundle-es7-es2016/electron-main-.js.map'\" && rimraf ./dist/bundle-es7-es2016/electron-main-.js.map",
    "bundle-browserify-electron-renderer:es7-es2016": "browserify ./dist/es7-es2016/src/electron/renderer/index.js --no-builtins --no-commondir --ignore-missing --xxinsert-globals --insert-global-vars \"xx__filename,xx__dirname\" --no-browser-field --xxfull-paths --xxlist --xxdeps --debug --xxexternal \"node_modules/electron/**/*.js\" --exclude electron --exclude conf --exclude bindings --outfile ./dist/bundle-es7-es2016/electron-renderer.inlinesourcemap.js",
    "bundle-exorcist-electron-renderer:es7-es2016": "cat ./dist/bundle-es7-es2016/electron-renderer.inlinesourcemap.js | exorcist --root ../../ ./dist/bundle-es7-es2016/electron-renderer_.js.map > ./dist/bundle-es7-es2016/electron-renderer_.js && json -I -f ./dist/bundle-es7-es2016/electron-renderer_.js.map -e \"this.sourcesContent=false\" && rimraf ./dist/bundle-es7-es2016/electron-renderer.inlinesourcemap.js",
    "bundle-sorcery-electron-renderer:es7-es2016": "sorcery --input ./dist/bundle-es7-es2016/electron-renderer_.js --output ./dist/bundle-es7-es2016/electron-renderer.js && rimraf ./dist/bundle-es7-es2016/electron-renderer_.js && rimraf ./dist/bundle-es7-es2016/electron-renderer_.js.map",
    "bundle-uglify-electron-renderer:es7-es2016": "echo \"uglify skip.\"",
    "bundle-uglify-electron-renderer:es7-es2016_": "cpy ./dist/bundle-es7-es2016/electron-renderer.js.map ./dist/bundle-es7-es2016/ --rename=electron-renderer-.js.map && json -I -f ./dist/bundle-es7-es2016/electron-renderer-.js.map -e \"this.sourcesContent=false\" && terse ./dist/bundle-es7-es2016/electron-renderer.js --output ./dist/bundle-es7-es2016/electron-renderer.min.js --xxcompress --xxmangle --keep-classnames --keep-fnames --beautify \"beautify=false,ecma=6,indent_level=0\" --source-map \"root='',url='electron-renderer.min.js.map',content='./dist/bundle-es7-es2016/electron-renderer-.js.map'\" && rimraf ./dist/bundle-es7-es2016/electron-renderer-.js.map",
    "bundle-browserify-electron-webview-preload:es7-es2016": "browserify ./node_modules/r2-navigator-js/dist/es7-es2016/src/electron/renderer/webview/preload.js --no-builtins --no-commondir --ignore-missing --xxinsert-globals --insert-global-vars \"xx__filename,xx__dirname\" --no-browser-field --xxfull-paths --xxlist --xxdeps --debug --xxexternal \"node_modules/electron/**/*.js\" --exclude electron --outfile ./dist/bundle-es7-es2016/electron-webview-preload.inlinesourcemap.js",
    "bundle-exorcist-electron-webview-preload:es7-es2016": "cat ./dist/bundle-es7-es2016/electron-webview-preload.inlinesourcemap.js | exorcist --root ../../ ./dist/bundle-es7-es2016/electron-webview-preload_.js.map > ./dist/bundle-es7-es2016/electron-webview-preload_.js && json -I -f ./dist/bundle-es7-es2016/electron-webview-preload_.js.map -e \"this.sourcesContent=false\" && rimraf ./dist/bundle-es7-es2016/electron-webview-preload.inlinesourcemap.js",
    "bundle-sorcery-electron-webview-preload:es7-es2016": "sorcery --input ./dist/bundle-es7-es2016/electron-webview-preload_.js --output ./dist/bundle-es7-es2016/electron-webview-preload.js && rimraf ./dist/bundle-es7-es2016/electron-webview-preload_.js && rimraf ./dist/bundle-es7-es2016/electron-webview-preload_.js.map",
    "bundle-uglify-electron-webview-preload:es7-es2016": "echo \"uglify skip.\"",
    "bundle-uglify-electron-webview-preload:es7-es2016_": "cpy ./dist/bundle-es7-es2016/electron-webview-preload.js.map ./dist/bundle-es7-es2016/ --rename=electron-webview-preload-.js.map && json -I -f ./dist/bundle-es7-es2016/electron-webview-preload-.js.map -e \"this.sourcesContent=false\" && terse ./dist/bundle-es7-es2016/electron-webview-preload.js --output ./dist/bundle-es7-es2016/electron-webview-preload.min.js --xxcompress --xxmangle --keep-classnames --keep-fnames --beautify \"beautify=false,ecma=6,indent_level=0\" --source-map \"root='',url='electron-webview-preload.min.js.map',content='./dist/bundle-es7-es2016/electron-webview-preload-.js.map'\" && rimraf ./dist/bundle-es7-es2016/electron-webview-preload-.js.map",
    "bundle:es7-es2016": "echo \"bundle skip.\"",
    "bundle-npm-externals:es7-es2016_": "cd ./dist/bundle-es7-es2016/ && rimraf package.json && rimraf package-lock.json && rimraf node_modules && npm init -f -y && npm install conf@latest --save && npm install bindings@latest --save && rimraf package.json && rimraf package-lock.json && cd ..",
    "prebundle:es7-es2016_": "curl https://raw.githubusercontent.com/rbuckton/reflect-metadata/master/Reflect.ts > Reflect.ts && ((ls ./node_modules/reflect-metadata/ && cpy ./Reflect.ts ./node_modules/reflect-metadata/) || echo \"OK\") && ((ls ./node_modules/ta-json-x/node_modules/reflect-metadata/ && cpy ./Reflect.ts ./node_modules/ta-json-x/node_modules/reflect-metadata/) || echo \"OK\") && ((ls ./node_modules/r2-navigator-js/node_modules/ta-json-x/node_modules/reflect-metadata/ && cpy ./Reflect.ts ./node_modules/r2-navigator-js/node_modules/ta-json-x/node_modules/reflect-metadata/) || echo \"OK\") && ((ls ./node_modules/r2-streamer-js/node_modules/ta-json-x/node_modules/reflect-metadata/ && cpy ./Reflect.ts ./node_modules/r2-streamer-js/node_modules/ta-json-x/node_modules/reflect-metadata/) || echo \"OK\") && rimraf Reflect.ts && ((ls ./node_modules/structured-source/ && sed \"s/sourceMappingURL=.*/VOIDsourceMappingURLVOID=/g\" \"./node_modules/structured-source/lib/index.js\" > \"./node_modules/structured-source/lib/index.js.removedsrcmap\" && sed \"s/sourceMappingURL=.*/VOIDsourceMappingURLVOID=/g\" \"./node_modules/structured-source/lib/structured-source.js\" > \"./node_modules/structured-source/lib/structured-source.js.removedsrcmap\" && sed \"s/sourceMappingURL=.*/VOIDsourceMappingURLVOID=/g\" \"./node_modules/boundary/lib/index.js\" > \"./node_modules/boundary/lib/index.js.removedsrcmap\" && mv \"./node_modules/structured-source/lib/index.js.removedsrcmap\" \"./node_modules/structured-source/lib/index.js\" && mv \"./node_modules/structured-source/lib/structured-source.js.removedsrcmap\" \"./node_modules/structured-source/lib/structured-source.js\" && mv \"./node_modules/boundary/lib/index.js.removedsrcmap\" \"./node_modules/boundary/lib/index.js\") || echo \"OK\")",
    "bundle:es7-es2016_": "mkdirp ./dist/bundle-es7-es2016 && npm run bundle-npm-externals:es7-es2016_ && (cpy ./LCP/lcp.node ./dist/bundle-es7-es2016/ || echo \"!LCP.node\") && cpy ./dist/es7-es2016/src/electron/renderer/riot.js ./dist/bundle-es7-es2016/ && cpy ./riots/linklist/index.js ../../../../bundle-es7-es2016/ --cwd=./dist/es7-es2016/src/electron/renderer/ --parents && cpy ./riots/linklistgroup/index.js ../../../../bundle-es7-es2016/ --cwd=./dist/es7-es2016/src/electron/renderer/ --parents && cpy ./riots/linktree/index.js ../../../../bundle-es7-es2016/ --cwd=./dist/es7-es2016/src/electron/renderer/ --parents && cpy ./riots/menuselect/index.js ../../../../bundle-es7-es2016/ --cwd=./dist/es7-es2016/src/electron/renderer/ --parents && cpy ./dist/es7-es2016/src/electron/renderer/MaterialIcons-Regular.woff2 ./dist/bundle-es7-es2016/ && cpy ./dist/es7-es2016/src/electron/renderer/material-components-web.css ./dist/bundle-es7-es2016/ && cpy ./dist/es7-es2016/src/electron/renderer/material-components-web.js ./dist/bundle-es7-es2016/ && cpy ./dist/es7-es2016/src/electron/renderer/AccessibleDfA.otf ./dist/bundle-es7-es2016/ && cpy ./dist/es7-es2016/src/electron/renderer/iAWriterDuospace-Regular.ttf ./dist/bundle-es7-es2016/ && cpy ./dist/es7-es2016/src/electron/renderer/index.html ./dist/bundle-es7-es2016/ && cpy \"./**/*.css\" ../../../../bundle-es7-es2016/ --cwd=./dist/es7-es2016/src/electron/renderer/ --parents && printf \"require('./electron-renderer.js');\" > ./dist/bundle-es7-es2016/index.js && printf \"require('./electron-main.js');\" > ./dist/bundle-es7-es2016/main.js && printf \"require('./electron-webview-preload.js');\" > ./dist/bundle-es7-es2016/preload.js && cpy \"./ReadiumCSS/**/*\" ./bundle-es7-es2016/ --cwd=./dist/ --parents --no-dir && cpy \"./mathjax/**/*\" ./bundle-es7-es2016/ --cwd=./dist/ --parents --no-dir && npm run bundle-electron-main:es7-es2016 && npm run bundle-electron-renderer:es7-es2016 && npm run bundle-electron-webview-preload:es7-es2016 && rimraf \"./dist/bundle-es7-es2016/*.js.map\"",
    "bundle-electron-main:es7-es2016": "npm run bundle-browserify-electron-main:es7-es2016 && npm run bundle-exorcist-electron-main:es7-es2016 && npm run bundle-sorcery-electron-main:es7-es2016 && npm run bundle-uglify-electron-main:es7-es2016",
    "bundle-electron-renderer:es7-es2016": "npm run bundle-browserify-electron-renderer:es7-es2016 && npm run bundle-exorcist-electron-renderer:es7-es2016 && npm run bundle-sorcery-electron-renderer:es7-es2016 && npm run bundle-uglify-electron-renderer:es7-es2016",
    "bundle-electron-webview-preload:es7-es2016": "npm run bundle-browserify-electron-webview-preload:es7-es2016 && npm run bundle-exorcist-electron-webview-preload:es7-es2016 && npm run bundle-sorcery-electron-webview-preload:es7-es2016 && npm run bundle-uglify-electron-webview-preload:es7-es2016",
    "bundle-browserify-electron-main:es8-es2017": "browserify ./dist/es8-es2017/src/electron/main/index.js --no-builtins --no-commondir --ignore-missing --xxinsert-globals --insert-global-vars \"xx__filename,xx__dirname\" --no-browser-field --xxfull-paths --xxlist --xxdeps --debug --xxexternal \"node_modules/electron/**/*.js\" --exclude electron --exclude conf --exclude bindings --outfile ./dist/bundle-es8-es2017/electron-main.inlinesourcemap.js",
    "bundle-exorcist-electron-main:es8-es2017": "cat ./dist/bundle-es8-es2017/electron-main.inlinesourcemap.js | exorcist --root ../../ ./dist/bundle-es8-es2017/electron-main_.js.map > ./dist/bundle-es8-es2017/electron-main_.js && json -I -f ./dist/bundle-es8-es2017/electron-main_.js.map -e \"this.sourcesContent=false\" && rimraf ./dist/bundle-es8-es2017/electron-main.inlinesourcemap.js",
    "bundle-sorcery-electron-main:es8-es2017": "sorcery --input ./dist/bundle-es8-es2017/electron-main_.js --output ./dist/bundle-es8-es2017/electron-main.js && rimraf ./dist/bundle-es8-es2017/electron-main_.js && rimraf ./dist/bundle-es8-es2017/electron-main_.js.map",
    "bundle-uglify-electron-main:es8-es2017": "echo \"uglify skip.\"",
    "bundle-uglify-electron-main:es8-es2017_": "cpy ./dist/bundle-es8-es2017/electron-main.js.map ./dist/bundle-es8-es2017/ --rename=electron-main-.js.map && json -I -f ./dist/bundle-es8-es2017/electron-main-.js.map -e \"this.sourcesContent=false\" && terse ./dist/bundle-es8-es2017/electron-main.js --output ./dist/bundle-es8-es2017/electron-main.min.js --xxcompress --xxmangle --keep-classnames --keep-fnames --beautify \"beautify=false,ecma=6,indent_level=0\" --source-map \"root='',url='electron-main.min.js.map',content='./dist/bundle-es8-es2017/electron-main-.js.map'\" && rimraf ./dist/bundle-es8-es2017/electron-main-.js.map",
    "bundle-browserify-electron-renderer:es8-es2017": "browserify ./dist/es8-es2017/src/electron/renderer/index.js --no-builtins --no-commondir --ignore-missing --xxinsert-globals --insert-global-vars \"xx__filename,xx__dirname\" --no-browser-field --xxfull-paths --xxlist --xxdeps --debug --xxexternal \"node_modules/electron/**/*.js\" --exclude electron --exclude conf --exclude bindings --outfile ./dist/bundle-es8-es2017/electron-renderer.inlinesourcemap.js",
    "bundle-exorcist-electron-renderer:es8-es2017": "cat ./dist/bundle-es8-es2017/electron-renderer.inlinesourcemap.js | exorcist --root ../../ ./dist/bundle-es8-es2017/electron-renderer_.js.map > ./dist/bundle-es8-es2017/electron-renderer_.js && json -I -f ./dist/bundle-es8-es2017/electron-renderer_.js.map -e \"this.sourcesContent=false\" && rimraf ./dist/bundle-es8-es2017/electron-renderer.inlinesourcemap.js",
    "bundle-sorcery-electron-renderer:es8-es2017": "sorcery --input ./dist/bundle-es8-es2017/electron-renderer_.js --output ./dist/bundle-es8-es2017/electron-renderer.js && rimraf ./dist/bundle-es8-es2017/electron-renderer_.js && rimraf ./dist/bundle-es8-es2017/electron-renderer_.js.map",
    "bundle-uglify-electron-renderer:es8-es2017": "echo \"uglify skip.\"",
    "bundle-uglify-electron-renderer:es8-es2017_": "cpy ./dist/bundle-es8-es2017/electron-renderer.js.map ./dist/bundle-es8-es2017/ --rename=electron-renderer-.js.map && json -I -f ./dist/bundle-es8-es2017/electron-renderer-.js.map -e \"this.sourcesContent=false\" && terse ./dist/bundle-es8-es2017/electron-renderer.js --output ./dist/bundle-es8-es2017/electron-renderer.min.js --xxcompress --xxmangle --keep-classnames --keep-fnames --beautify \"beautify=false,ecma=6,indent_level=0\" --source-map \"root='',url='electron-renderer.min.js.map',content='./dist/bundle-es8-es2017/electron-renderer-.js.map'\" && rimraf ./dist/bundle-es8-es2017/electron-renderer-.js.map",
    "bundle-browserify-electron-webview-preload:es8-es2017": "browserify ./node_modules/r2-navigator-js/dist/es8-es2017/src/electron/renderer/webview/preload.js --no-builtins --no-commondir --ignore-missing --xxinsert-globals --insert-global-vars \"xx__filename,xx__dirname\" --no-browser-field --xxfull-paths --xxlist --xxdeps --debug --xxexternal \"node_modules/electron/**/*.js\" --exclude electron --outfile ./dist/bundle-es8-es2017/electron-webview-preload.inlinesourcemap.js",
    "bundle-exorcist-electron-webview-preload:es8-es2017": "cat ./dist/bundle-es8-es2017/electron-webview-preload.inlinesourcemap.js | exorcist --root ../../ ./dist/bundle-es8-es2017/electron-webview-preload_.js.map > ./dist/bundle-es8-es2017/electron-webview-preload_.js && json -I -f ./dist/bundle-es8-es2017/electron-webview-preload_.js.map -e \"this.sourcesContent=false\" && rimraf ./dist/bundle-es8-es2017/electron-webview-preload.inlinesourcemap.js",
    "bundle-sorcery-electron-webview-preload:es8-es2017": "sorcery --input ./dist/bundle-es8-es2017/electron-webview-preload_.js --output ./dist/bundle-es8-es2017/electron-webview-preload.js && rimraf ./dist/bundle-es8-es2017/electron-webview-preload_.js && rimraf ./dist/bundle-es8-es2017/electron-webview-preload_.js.map",
    "bundle-uglify-electron-webview-preload:es8-es2017": "echo \"uglify skip.\"",
    "bundle-uglify-electron-webview-preload:es8-es2017_": "cpy ./dist/bundle-es8-es2017/electron-webview-preload.js.map ./dist/bundle-es8-es2017/ --rename=electron-webview-preload-.js.map && json -I -f ./dist/bundle-es8-es2017/electron-webview-preload-.js.map -e \"this.sourcesContent=false\" && terse ./dist/bundle-es8-es2017/electron-webview-preload.js --output ./dist/bundle-es8-es2017/electron-webview-preload.min.js --xxcompress --xxmangle --keep-classnames --keep-fnames --beautify \"beautify=false,ecma=6,indent_level=0\" --source-map \"root='',url='electron-webview-preload.min.js.map',content='./dist/bundle-es8-es2017/electron-webview-preload-.js.map'\" && rimraf ./dist/bundle-es8-es2017/electron-webview-preload-.js.map",
    "bundle:es8-es2017": "echo \"bundle skip.\"",
    "bundle-npm-externals:es8-es2017_": "cd ./dist/bundle-es8-es2017/ && rimraf package.json && rimraf package-lock.json && rimraf node_modules && npm init -f -y && npm install conf@latest --save && npm install bindings@latest --save && rimraf package.json && rimraf package-lock.json && cd ..",
    "prebundle:es8-es2017_": "curl https://raw.githubusercontent.com/rbuckton/reflect-metadata/master/Reflect.ts > Reflect.ts && ((ls ./node_modules/reflect-metadata/ && cpy ./Reflect.ts ./node_modules/reflect-metadata/) || echo \"OK\") && ((ls ./node_modules/ta-json-x/node_modules/reflect-metadata/ && cpy ./Reflect.ts ./node_modules/ta-json-x/node_modules/reflect-metadata/) || echo \"OK\") && ((ls ./node_modules/r2-navigator-js/node_modules/ta-json-x/node_modules/reflect-metadata/ && cpy ./Reflect.ts ./node_modules/r2-navigator-js/node_modules/ta-json-x/node_modules/reflect-metadata/) || echo \"OK\") && ((ls ./node_modules/r2-streamer-js/node_modules/ta-json-x/node_modules/reflect-metadata/ && cpy ./Reflect.ts ./node_modules/r2-streamer-js/node_modules/ta-json-x/node_modules/reflect-metadata/) || echo \"OK\") && rimraf Reflect.ts && ((ls ./node_modules/structured-source/ && sed \"s/sourceMappingURL=.*/VOIDsourceMappingURLVOID=/g\" \"./node_modules/structured-source/lib/index.js\" > \"./node_modules/structured-source/lib/index.js.removedsrcmap\" && sed \"s/sourceMappingURL=.*/VOIDsourceMappingURLVOID=/g\" \"./node_modules/structured-source/lib/structured-source.js\" > \"./node_modules/structured-source/lib/structured-source.js.removedsrcmap\" && sed \"s/sourceMappingURL=.*/VOIDsourceMappingURLVOID=/g\" \"./node_modules/boundary/lib/index.js\" > \"./node_modules/boundary/lib/index.js.removedsrcmap\" && mv \"./node_modules/structured-source/lib/index.js.removedsrcmap\" \"./node_modules/structured-source/lib/index.js\" && mv \"./node_modules/structured-source/lib/structured-source.js.removedsrcmap\" \"./node_modules/structured-source/lib/structured-source.js\" && mv \"./node_modules/boundary/lib/index.js.removedsrcmap\" \"./node_modules/boundary/lib/index.js\") || echo \"OK\")",
    "bundle:es8-es2017_": "mkdirp ./dist/bundle-es8-es2017 && npm run bundle-npm-externals:es8-es2017_ && (cpy ./LCP/lcp.node ./dist/bundle-es8-es2017/ || echo \"!LCP.node\") && cpy ./dist/es8-es2017/src/electron/renderer/riot.js ./dist/bundle-es8-es2017/ && cpy ./riots/linklist/index.js ../../../../bundle-es8-es2017/ --cwd=./dist/es8-es2017/src/electron/renderer/ --parents && cpy ./riots/linklistgroup/index.js ../../../../bundle-es8-es2017/ --cwd=./dist/es8-es2017/src/electron/renderer/ --parents && cpy ./riots/linktree/index.js ../../../../bundle-es8-es2017/ --cwd=./dist/es8-es2017/src/electron/renderer/ --parents && cpy ./riots/menuselect/index.js ../../../../bundle-es8-es2017/ --cwd=./dist/es8-es2017/src/electron/renderer/ --parents && cpy ./dist/es8-es2017/src/electron/renderer/MaterialIcons-Regular.woff2 ./dist/bundle-es8-es2017/ && cpy ./dist/es8-es2017/src/electron/renderer/material-components-web.css ./dist/bundle-es8-es2017/ && cpy ./dist/es8-es2017/src/electron/renderer/material-components-web.js ./dist/bundle-es8-es2017/ && cpy ./dist/es8-es2017/src/electron/renderer/AccessibleDfA.otf ./dist/bundle-es8-es2017/ && cpy ./dist/es8-es2017/src/electron/renderer/iAWriterDuospace-Regular.ttf ./dist/bundle-es8-es2017/ && cpy ./dist/es8-es2017/src/electron/renderer/index.html ./dist/bundle-es8-es2017/ && cpy \"./**/*.css\" ../../../../bundle-es8-es2017/ --cwd=./dist/es8-es2017/src/electron/renderer/ --parents && printf \"require('./electron-renderer.js');\" > ./dist/bundle-es8-es2017/index.js && printf \"require('./electron-main.js');\" > ./dist/bundle-es8-es2017/main.js && printf \"require('./electron-webview-preload.js');\" > ./dist/bundle-es8-es2017/preload.js && cpy \"./ReadiumCSS/**/*\" ./bundle-es8-es2017/ --cwd=./dist/ --parents --no-dir && cpy \"./mathjax/**/*\" ./bundle-es8-es2017/ --cwd=./dist/ --parents --no-dir && npm run bundle-electron-main:es8-es2017 && npm run bundle-electron-renderer:es8-es2017 && npm run bundle-electron-webview-preload:es8-es2017 && rimraf \"./dist/bundle-es8-es2017/*.js.map\"",
    "bundle-electron-main:es8-es2017": "npm run bundle-browserify-electron-main:es8-es2017 && npm run bundle-exorcist-electron-main:es8-es2017 && npm run bundle-sorcery-electron-main:es8-es2017 && npm run bundle-uglify-electron-main:es8-es2017",
    "bundle-electron-renderer:es8-es2017": "npm run bundle-browserify-electron-renderer:es8-es2017 && npm run bundle-exorcist-electron-renderer:es8-es2017 && npm run bundle-sorcery-electron-renderer:es8-es2017 && npm run bundle-uglify-electron-renderer:es8-es2017",
    "bundle-electron-webview-preload:es8-es2017": "npm run bundle-browserify-electron-webview-preload:es8-es2017 && npm run bundle-exorcist-electron-webview-preload:es8-es2017 && npm run bundle-sorcery-electron-webview-preload:es8-es2017 && npm run bundle-uglify-electron-webview-preload:es8-es2017"
  },
  "importSort": {
    ".ts": {
      "parser": "typescript",
      "style": "module"
    }
  }
}
